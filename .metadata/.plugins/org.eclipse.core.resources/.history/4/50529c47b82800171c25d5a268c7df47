package MatrixUtil;

/**
 * This class are used to store the Matrix and giving them some utility
 * to play with matrix that Ko Robyn have teach us.
 * 
 * Some utility that can be used to play with:
 *  - Transpose
 *  - Find the cofactor matrix
 *  - Find the determinan
 *  - 
 * 
 * @version v0.1.1-alpha1
 * @author 201673011 - Chris x 201673077 - Irvan
 *
 */
public class Matrix {
	/*
	 * This is some constant matrix that appears to be generatable.
	 */
	public static Matrix getIdentityMatrix(int size){
		Matrix m = new Matrix(size,size);
	}
	
	
	/**
	 * Matrix storage system, use 2d array.
	 */
	private int[][] matrix;
	
	/**
	 * Instantiate blank matrix
	 * @param rowSize n of the Matrix.
	 * @param colSize m of the Matrix.
	 */
	public Matrix(int rowSize, int colSize){
		matrix = new int[rowSize][colSize];
	}
	
	/**
	 * Instantiate matrix from 2d array
	 * @param matrix existing 2d array of matrix.
	 */
	public Matrix(int[][] matrix) {
		this.matrix = matrix;
	}
	
	/**
	 * Convert current matrix as array of integer
	 * @return Matrix on 2D array.
	 */
	public int[][] toIntArray(){
		return matrix;
	}
	
	/**
	 * Changes the current value on a particular position
	 * @param row row position.
	 * @param col col position.
	 * @param value value that want to be changed.
	 */
	public void setValue(int row, int col, int value) throws OutOfBoundException{
		matrix[row][col] = value;
	}
}
